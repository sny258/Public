# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript


trigger:
- dev

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '12.x'
  displayName: 'Install Node.js'

- script: |
    npm install -g @angular/cli
    npm install
    ng build --configuration=dev
  displayName: 'npm install and build dev file'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(system.defaultworkingDirectory)/dist/navbar'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/AscendDev.zip'
    replaceExistingArchive: true

- script: |
    ng build --configuration=qa
  displayName: ' build stage file' 

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(system.defaultworkingDirectory)/dist/navbar'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/AscendQA.zip'
    replaceExistingArchive: true  

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'      




--------------------------------



# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- dev

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '14.x'
  displayName: 'Install Node.js'

- script: |
    npm install
    npm run build
    rm -R .git
  displayName: 'npm install and build'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)'
    Contents: |
      web.config
      .env
    TargetFolder: '$(system.defaultworkingDirectory)/dist'

- task: CopyFiles@2
  inputs:
    Contents: '$(System.DefaultWorkingDirectory)/node_modules/**'
    TargetFolder: '$(system.defaultworkingDirectory)/dist/'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)'
    Contents: |
      .env
    TargetFolder: '$(system.defaultworkingDirectory)/dist/src'


- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(system.defaultworkingDirectory)/dist'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/node.zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'


