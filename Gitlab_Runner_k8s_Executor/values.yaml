image:
  registry: registry.gitlab.com
  image: gitlab-org/gitlab-runner

useTini: false

imagePullPolicy: IfNotPresent

replicas: 1

gitlabUrl: https://sourcery-test.assaabloy.net

runnerRegistrationToken: "GR1348941ZgsmRxQ6xxxxxxxxxxxx"

unregisterRunners: true

terminationGracePeriodSeconds: 120

concurrent: 9

checkInterval: 10

rbac:
  create: true
  rules: []

runners:
  config: |
    [[runners]]
      executor = "kubernetes"
      #builds_dir = "/builds"
      [runners.kubernetes]
        namespace = "{{.Release.Namespace}}"
        image = "alpine"
        privileged = true
        poll_interval = 5
        poll_timeout = 3600
        cpu_request = "500m"                    #Actual docker image which will run the stage, build
        cpu_limit = "700"                      # 2 equal to 2000m & 0.5 equal to 500m
        memory_request = "512Mi"
        memory_limit = "1Gi"
        service_cpu_request = "500m"
        service_cpu_limit = "1"              #For service used with build container
        service_memory_request = "512Mi"
        service_memory_limit = "1Gi"
        helper_cpu_limit = "100m"               #registry.gitlab.com/gitlab-org/gitlab-runner/gitlab-runner-helper, helper
        helper_memory_limit = "100Mi"
        #[[runners.kubernetes.volumes.pvc]]
          #name = "gwl-gitlab-runner-pvc-$CI_CONCURRENT_ID"
          #mount_path = "/builds"
        [runners.kubernetes.node_selector]
          "node" = "gwl-gitlab-runner-node"
        [runners.kubernetes.node_tolerations]
          "runner=true" = "NoSchedule"
      [runners.cache]
        Type = "s3"
        Path = "runner-cache"
        Shared = true
        [runners.cache.s3]
          ServerAddress = "s3.amazonaws.com"
          BucketName = "terraform-statefile-gitlabrunner"
          BucketLocation = "eu-west-1"
          Insecure = false
          AuthenticationType = "access-key"

  tags: "Docker,Runner"

  name: "runner-k8s-executor"

  cache:
    secretName: s3access

## Node labels for pod assignment
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
##
#nodeSelector: {}
  # Example: The gitlab runner manager should not run on spot instances so you can assign
  # them to the regular worker nodes only.
  # node-role.kubernetes.io/worker: "true"
nodeSelector:
    "node": "gwl-gitlab-runner-manager-node"
    
    
    
    
## creds of a user in AWS, who has admin access to s3 buckets.
# kubectl create secret generic s3access -n gwl-runner \
    # --from-literal=accesskey="AKIAQXDLYIxxxxxxxxx" \
    # --from-literal=secretkey="7uHuLXAKKDTmY4GUJCqZHeUxxxxxxxxxxx"